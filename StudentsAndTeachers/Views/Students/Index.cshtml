@model PaginatedList<StudentsAndTeachers.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h2>Student List</h2>
<p><a asp-action="Create">Add New Student</a></p>
<p><a asp-action="DeleteAll">Delete all Students </a></p>
<p><a asp-action="Import">Import Students From CSV File</a></p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Name, Student Number, or Student ID: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<p></p>
<p> *Click column header to sort by column</p>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StudentIDSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Student ID</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StudentNumberSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Student Number</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["FirstNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">First Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LastNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["HasScholarshipSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Has Scholarship?</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.StudentID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StudentNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HasScholarship)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.StudentID">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.StudentID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
